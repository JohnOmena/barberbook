{"nodes":[
{"name":"LoadState","type":"n8n-nodes-base.redis","typeVersion":1,"parameters":{"operation":"get","key":"=state:{{$json.chatId}}"},"position":[980,420]},
{"name":"Carry_Base","type":"n8n-nodes-base.function","typeVersion":1,"parameters":{"functionCode":"return items;"},"position":[980,540]},
{"name":"Merge_Load","type":"n8n-nodes-base.merge","typeVersion":1,"parameters":{"mode":"mergeByPosition"},"position":[1240,480]},
{"name":"Parse_State","type":"n8n-nodes-base.function","typeVersion":1,"parameters":{"functionCode":"let state=null;try{if(typeof $json.value==='string'&&$json.value.trim())state=JSON.parse($json.value);}catch(e){}const statePresent=!!state;return [{json:{...$json,state,statePresent}}];"},"position":[1500,480]},
{"name":"HasState","type":"n8n-nodes-base.if","typeVersion":1,"parameters":{"conditions":{"boolean":[{"value1":"={{$json.statePresent}}"}]}},"position":[1760,480]},

{"name":"PickOption","type":"n8n-nodes-base.function","typeVersion":1,"parameters":{"functionCode":"const t=String($json.text||'').trim();const m=t.match(/\\d+/);const n=m?parseInt(m[0],10):NaN;const arr=Array.isArray($json.state?.slots)?$json.state.slots:[];let ok=false,start=null,cancelRequested=false;if(Number.isInteger(n)){ if(n===0){ cancelRequested=true; } else if(n>=1&&n<=arr.length){ start=arr[n-1]?.startUtc||null; ok=!!start; } } const sid=$json.state?.serviceId||$json.serviceId||'';const sname=$json.state?.serviceName||$json.serviceName||'';const date=$json.state?.date||$json.date||'';return [{json:{...$json,optionValid:ok,cancelRequested,selectedStartUtc:start,serviceId:sid,serviceName:sname,date}}];"},"position":[2020,420]},
{"name":"IfCancel_AG","type":"n8n-nodes-base.if","typeVersion":1,"parameters":{"conditions":{"boolean":[{"value1":"={{$json.cancelRequested}}","value2":true}]}},"position":[2140,500]},
{"name":"WAHA_Cancel_AG","type":"n8n-nodes-base.httpRequest","typeVersion":1,"parameters":{"method":"POST","url":"http://waha:3000/api/sendText","jsonParameters":true,"headerParametersJson":"{\"Content-Type\":\"application/json\"}","bodyParametersJson":"{\"session\":\"{{$json.session}}\",\"chatId\":\"{{$json.chatId}}\",\"text\":\"Ok, cancelado. Envie outro serviço ou data se quiser tentar novamente.\",\"reply_to\":\"{{$json.messageId}}\"}"},"position":[2400,540]},
{"name":"API_Book","type":"n8n-nodes-base.httpRequest","typeVersion":1,"parameters":{"method":"POST","url":"http://barberbook-api:8080/api/book","jsonParameters":true,"options":{"fullResponse":true,"ignoreResponseCode":true},"headerParametersJson":"{\"Content-Type\":\"application/json\"}","bodyParametersJson":"={\"tenantId\":\"{{$json.id || $json.tenantId || ''}}\",\"serviceId\":\"{{$json.serviceId}}\",\"startUtc\":\"{{$json.selectedStartUtc}}\",\"clientName\":\"{{$json.pushName || 'Cliente'}}\",\"clientContact\":\"{{$json.chatId}}\"}"},"position":[2280,420]},
{"name":"API_Tenant","type":"n8n-nodes-base.httpRequest","typeVersion":1,"parameters":{"method":"GET","url":"http://barberbook-api:8080/api/tenant-default","jsonParameters":true},"position":[2140,500]},
{"name":"Merge_Tenant","type":"n8n-nodes-base.merge","typeVersion":1,"parameters":{"mode":"mergeByPosition"},"position":[2400,500]},
{"name":"Conflict409","type":"n8n-nodes-base.if","typeVersion":1,"parameters":{"conditions":{"number":[{"operation":"equal","value1":"={{$json.statusCode}}","value2":409}]}},"position":[2540,420]},
{"name":"WAHA_Conflict","type":"n8n-nodes-base.httpRequest","typeVersion":1,"parameters":{"method":"POST","url":"http://waha:3000/api/sendText","jsonParameters":true,"headerParametersJson":"{\"Content-Type\":\"application/json\"}","bodyParametersJson":"{\"session\":\"{{$json.session}}\",\"chatId\":\"{{$json.chatId}}\",\"text\":\"Esse horario esgotou agora. Quer ver outras opcoes?\",\"reply_to\":\"{{$json.messageId}}\"}"},"position":[2800,400]},
{"name":"WAHA_Confirmed","type":"n8n-nodes-base.httpRequest","typeVersion":1,"parameters":{"method":"POST","url":"http://waha:3000/api/sendText","jsonParameters":true,"headerParametersJson":"{\"Content-Type\":\"application/json\"}","bodyParametersJson":"{\"session\":\"{{$json.session}}\",\"chatId\":\"{{$json.chatId}}\",\"text\":\"Agendado: {{$json.serviceName}} às {{(new Date($json.body?.startsAt || $json.selectedStartUtc)).toTimeString().slice(0,5)}}. ID: {{$json.body?.id}}. Para cancelar, responda: cancelar {{$json.body?.id}}.\",\"reply_to\":\"{{$json.messageId}}\"}"},"position":[2800,460]},
{"name":"ClearState","type":"n8n-nodes-base.redis","typeVersion":1,"parameters":{"operation":"del","key":"=state:{{$json.chatId}}"},"position":[3060,460]},

{"name":"Status2xx_AG","type":"n8n-nodes-base.if","typeVersion":1,"parameters":{"conditions":{"number":[{"operation":"largerEqual","value1":"={{$json.statusCode}}","value2":200},{"operation":"smaller","value1":"={{$json.statusCode}}","value2":300}]}},"position":[2660,460]},
{"name":"WAHA_Invalid_AG","type":"n8n-nodes-base.httpRequest","typeVersion":1,"parameters":{"method":"POST","url":"http://waha:3000/api/sendText","jsonParameters":true,"headerParametersJson":"{\"Content-Type\":\"application/json\"}","bodyParametersJson":"{\"session\":\"{{$json.session}}\",\"chatId\":\"{{$json.chatId}}\",\"text\":\"Opção inválida. Responda com o número do horário (1..5) ou 0 para cancelar.\",\"reply_to\":\"{{$json.messageId}}\"}"},"position":[2920,500]},

{"name":"Gemini_Intent","type":"n8n-nodes-base.httpRequest","typeVersion":1,"parameters":{"method":"POST","url":"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent","jsonParameters":true,"options":{"responseFormat":"json","ignoreResponseCode":true},"headerParametersJson":"{\"x-goog-api-key\":\"AIzaSyAQdhMQ-aMy0H7rW3QuQ29nhImz5GhlYLY\",\"Content-Type\":\"application/json\"}","bodyParametersJson":"{\"contents\":[{\"role\":\"user\",\"parts\":[{\"text\":\"Classifique a intencao desta mensagem (PT-BR). Responda APENAS JSON {\\\"intent\\\":\\\"agendar|cancelar|remarcar|outro\\\",\\\"service\\\":string|null,\\\"date\\\":YYYY-MM-DD|null}. Mensagem: {{$json.text}}\"}]}],\"generationConfig\":{\"responseMimeType\":\"application/json\"}}"},"position":[2020,560]},
{"name":"Parse_AI","type":"n8n-nodes-base.function","typeVersion":1,"parameters":{"functionCode":"let s='';try{const c=$json.candidates||[];if(c[0]?.content?.parts?.[0]?.text!=null)s=c[0].content.parts[0].text;else if($json.content?.parts?.[0]?.text)s=$json.content.parts[0].text;}catch(e){}let parsed={};const t=String(s||'').trim();try{parsed=JSON.parse(/\\{[\\s\\S]*\\}/.exec(t)?.[0]||t);}catch(e){parsed={};}let intent=parsed.intent;const allowed=['agendar','cancelar','remarcar','outro'];if(!allowed.includes(intent))intent='outro';const service=(parsed.service===null||typeof parsed.service==='string')?parsed.service:null;let date=parsed.date??null;if(typeof date==='string'){const m=date.match(/^(\\d{4}-\\d{2}-\\d{2})/);date=m?m[1]:null;}else date=null;return [{json:{...$json,intent,service,date}}];"},"position":[2280,560]},
{"name":"Carry_IA","type":"n8n-nodes-base.function","typeVersion":1,"parameters":{"functionCode":"return items;"},"position":[2020,640]},
{"name":"Merge_IA","type":"n8n-nodes-base.merge","typeVersion":1,"parameters":{"mode":"mergeByPosition"},"position":[2540,600]},
{"name":"Intent","type":"n8n-nodes-base.switch","typeVersion":1,"parameters":{"value1":"={{$json.intent}}","rules":[{"operation":"equal","value2":"agendar"},{"operation":"equal","value2":"cancelar"},{"operation":"equal","value2":"remarcar"},{"operation":"equal","value2":"outro"}]},"position":[2800,600]}
]}


